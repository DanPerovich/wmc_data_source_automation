name: Detect New and Changed CSV Files

on:
  push:
    branches:
      - main # Or your main branch name
    paths:
      - 'data/**' # Watch for changes in the data directory

env:
  WIREMOCK_CLOUD_API_TOKEN: ${{ secrets.WIREMOCK_CLOUD_API_TOKEN }}
  USER_ID: ${{ secrets.WIREMOCK_USER_ID }}

jobs:
  check-csv-changes:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v37
        with:
          format: space-delimited
          files: 'data/*.csv'

      - name: Check for new and changed CSV files
        id: check-changes
        run: |
          CHANGED_FILES="${{ steps.changed-files.outputs.all_changed_files }}"

          NEW_FILES_COUNT=$(echo "$CHANGED_FILES" | grep -oE '^A\s+data/.*\.csv$' | wc -l)

          echo "new_files_count=$NEW_FILES_COUNT" | tee -a $GITHUB_OUTPUT

          if [[ $NEW_FILES_COUNT -gt 0 ]]; then
            NEW_FILES=$(echo "$CHANGED_FILES" | grep -oE '^A\s+data/.*\.csv$' | cut -d' ' -f2)
            echo "new_csv_files=$NEW_FILES" | tee -a $GITHUB_OUTPUT
            echo "New CSV files detected:"
            echo "$NEW_FILES"
          else
            echo "new_csv_files=" | tee -a $GITHUB_OUTPUT
          fi

          # Improved logic for modified files
          MODIFIED_FILES=$(git diff-tree -r --name-only HEAD^ HEAD | grep 'data/.*\.csv$') # Use git diff-tree
          MODIFIED_FILES_COUNT=$(echo "$MODIFIED_FILES" | wc -l)

          echo "modified_files_count=$MODIFIED_FILES_COUNT" | tee -a $GITHUB_OUTPUT

          if [[ $MODIFIED_FILES_COUNT -gt 0 ]]; then
            echo "modified_csv_files=$MODIFIED_FILES" | tee -a $GITHUB_OUTPUT
            echo "Modified CSV files detected:"
            echo "$MODIFIED_FILES"
          else
            echo "modified_csv_files=" | tee -a $GITHUB_OUTPUT
          fi

      - name: Take action on new files
        if: steps.check-changes.outputs.new_files_count > 0
        run: |
          echo "Performing actions on NEW CSV files..."
          NEW_FILES=$(echo "${{ steps.check-changes.outputs.new_csv_files }}")
          for file in $NEW_FILES; do
            echo "Processing new file: $file"
            # Your commands to process each NEW file here
          done

      - name: Take action on modified files
        if: steps.check-changes.outputs.modified_files_count > 0
        run: |
          echo "Performing actions on MODIFIED CSV files..."
          MODIFIED_FILES=$(echo "${{ steps.check-changes.outputs.modified_csv_files }}")
          for file in $MODIFIED_FILES; do
            # Your commands to process each MODIFIED file here
            echo "Processing modified file: $file / $(basename "$file" .csv)"
            echo "Call api with url: 'https://api.wiremock.cloud/v1/users/${USER_ID}/data-sources?q=$(basename "$file" .csv)'"
            response=$(curl --request GET \
                -H "Authorization: Token $WIREMOCK_CLOUD_API_TOKEN" \
                --url "https://api.wiremock.cloud/v1/users/${USER_ID}/data-sources?q=$(basename '$file' .csv)")
            echo "DATA_SOURCE_ID=$(echo "$response" | jq -r '.dataSources[0].id' | tr -d '[:space:]')"
            DATA_SOURCE_ID=$(echo "$response" | jq -r '.dataSources[0].id' | tr -d '[:space:]')"

            # Parse CSV file 
            parsed_response=$(curl -X POST \
                -H "Authorization: Token $WIREMOCK_CLOUD_API_TOKEN" \
                -H "Content-Type: text/csv" \
                --data-binary "@$file" \
                https://api.wiremock.cloud/v1/data-sources/parse)
            
            echo "parsed_response=$parsed_response"    

            if [ $? -ne 0 ]; then
                echo "Failed to parse CSV file"
                exit 1
            fi
            
            # Modify parsed_response to include name and type
            #modified_response=$(echo "$parsed_response" | jq -c '.dataSource.name="'"$(basename "$file" .csv)"'" | .dataSource.type="CSV" | {dataSource: .dataSource}')


            #echo "Successfully parsed CSV file"

            # Update Data Source
            #echo "https://api.wiremock.cloud/v1/data-sources/${DATA_SOURCE_ID}"
            #put_response=$(curl -X PUT -H "Authorization: Token $WIREMOCK_CLOUD_API_TOKEN" -H "Content-Type: application/json" -d "${modified_response}" --url "https://api.wiremock.cloud/v1/data-sources/${DATA_SOURCE_ID}")
          done