name: Detect New and Changed CSV Files

on:
  push:
    branches:
      - main # Or your main branch name
    paths:
      - 'data/**' # Watch for changes in the data directory

jobs:
  check-csv-changes:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v37
        with:
          format: space-delimited
          files: 'data/*.csv'

      - name: Check for new and changed CSV files
        id: check-changes
        run: |
          CHANGED_FILES="${{ steps.changed-files.outputs.all_changed_files }}"

          NEW_FILES_COUNT=$(echo "$CHANGED_FILES" | grep -oE '^A\s+data/.*\.csv$' | wc -l)
          MODIFIED_FILES_COUNT=$(echo "$CHANGED_FILES" | grep -oE '^M\s+data/.*\.csv$' | wc -l)

          echo "new_files_count=$NEW_FILES_COUNT" >> $GITHUB_OUTPUT
          echo "modified_files_count=$MODIFIED_FILES_COUNT" >> $GITHUB_OUTPUT

          if [[ $NEW_FILES_COUNT -gt 0 ]]; then
            echo "new_csv_files=$(echo "$CHANGED_FILES" | grep -oE '^A\s+data/.*\.csv$' | cut -d' ' -f2)" >> $GITHUB_OUTPUT
          else
            echo "new_csv_files=" >> $GITHUB_OUTPUT
          fi

          if [[ $MODIFIED_FILES_COUNT -gt 0 ]]; then
            echo "modified_csv_files=$(echo "$CHANGED_FILES" | grep -oE '^M\s+data/.*\.csv$' | cut -d' ' -f2)" >> $GITHUB_OUTPUT
          else
            echo "modified_csv_files=" >> $GITHUB_OUTPUT
          fi

      - name: Take action on new files
        if: steps.check-changes.outputs.new_files_count > 0
        run: |
          echo "Performing actions on NEW CSV files..."
          NEW_FILES=$(echo "${{ steps.check-changes.outputs.new_csv_files }}")
          for file in $NEW_FILES; do
            echo "Processing new file: $file"
            # Your commands to process each NEW file here
          done

      - name: Take action on modified files
        if: steps.check-changes.outputs.modified_files_count > 0
        run: |
          echo "Performing actions on MODIFIED CSV files..."
          MODIFIED_FILES=$(echo "${{ steps.check-changes.outputs.modified_csv_files }}")
          for file in $MODIFIED_FILES; do
            echo "Processing modified file: $file"
            # Your commands to process each MODIFIED file here
          done